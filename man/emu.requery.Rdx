\name{emu.requery}
\alias{emu.requery}
%- Also NEED an `\alias' for EACH other topic documented here.
\title{ ~~function to do ... ~~}
\description{
 ~~ A concise (1-5 lines) description of what the function does. ~~
}
\usage{
emu.requery(segs, level, targetlevel=level, justlabels=F, sequence=0, longerok=F)
}
%- maybe also `usage' for other objects documented here.
\arguments{
 \item{segs}{ ~~Describe \code{segs} here~~ }
 \item{level}{ ~~Describe \code{level} here~~ }
 \item{targetlevel}{ ~~Describe \code{targetlevel} here~~ }
 \item{justlabels}{ ~~Describe \code{justlabels} here~~ }
 \item{sequence}{ ~~Describe \code{sequence} here~~ }
 \item{longerok}{ ~~Describe \code{longerok} here~~ }
}
\details{
 ~~ If necessary, more details than the __description__  above ~~
}
\value{
  ~Describe the value returned
  If it is a LIST, use
  \item{comp1 }{Description of `comp1'}
  \item{comp2 }{Description of `comp2'}
  ...
}
\references{ ~put references to the literature/web site here ~ }
\author{ ~~who you are~~ }
\note{ ~~further notes~~ }

 ~Make other sections like WARNING with \section{WARNING }{....} ~

\seealso{ ~~objects to SEE ALSO as \code{\link{~~fun~~}}, ~~~ }

\examples{
##---- Should be DIRECTLY executable !! ----
##-- ==>  Define data, use random,
##--	     or do  help(data=index)  for the standard data sets.

## The function is currently defined as
function (segs, level, targetlevel = level, justlabels = F, sequence = 0, 
    longerok = F) 
{
    segfile <- emu.tempfile("emu.track")
    museg.write(segs, segfile)
    on.exit(unlink(segfile))
    resultfile <- emu.tempfile("emu_requery")
    on.exit(unlink(resultfile))
    command <- paste(emu.options("bindir"), "emu_requery -o", 
        sep = emu.options("dirsep"))
    command <- paste(command, resultfile)
    if (justlabels) 
        command <- paste(command, "-j")
    if (sequence != 0) 
        command <- paste(command, "-s", sequence)
    if (longerok != 0) 
        command <- paste(command, "-l")
    command <- paste(command, segfile, level, targetlevel)
    cat(command, "\n")
    emu.system(command)
    if (justlabels) 
        result <- scan(resultfile, what = "")
    else {
        result <- read.segs(resultfile)
    }
    return(result)
  }
}
\keyword{ ~keyword }%-- one or more ...

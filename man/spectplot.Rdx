\name{spectplot}
\alias{spectplot}
%- Also NEED an `\alias' for EACH other topic documented here.
\title{ ~~function to do ... ~~}
\description{
 ~~ A concise (1-5 lines) description of what the function does. ~~
}
\usage{
spectplot(segs, track="samples", bandwidth="w", psfile="", rate=20000, scale=5, height=7, frange=c(0, rate/2), rms=F, ncolors=16, factor=4, zeropt=35, smoothformants=F, formants="fm", ...)
}
%- maybe also `usage' for other objects documented here.
\arguments{
 \item{segs}{ ~~Describe \code{segs} here~~ }
 \item{track}{ ~~Describe \code{track} here~~ }
 \item{bandwidth}{ ~~Describe \code{bandwidth} here~~ }
 \item{psfile}{ ~~Describe \code{psfile} here~~ }
 \item{rate}{ ~~Describe \code{rate} here~~ }
 \item{scale}{ ~~Describe \code{scale} here~~ }
 \item{height}{ ~~Describe \code{height} here~~ }
 \item{frange}{ ~~Describe \code{frange} here~~ }
 \item{rms}{ ~~Describe \code{rms} here~~ }
 \item{ncolors}{ ~~Describe \code{ncolors} here~~ }
 \item{factor}{ ~~Describe \code{factor} here~~ }
 \item{zeropt}{ ~~Describe \code{zeropt} here~~ }
 \item{smoothformants}{ ~~Describe \code{smoothformants} here~~ }
 \item{formants}{ ~~Describe \code{formants} here~~ }
 \item{\dots}{ ~~Describe \code{\dots} here~~ }
}
\details{
 ~~ If necessary, more details than the __description__  above ~~
}
\value{
  ~Describe the value returned
  If it is a LIST, use
  \item{comp1 }{Description of `comp1'}
  \item{comp2 }{Description of `comp2'}
  ...
}
\references{ ~put references to the literature/web site here ~ }
\author{ ~~who you are~~ }
\note{ ~~further notes~~ }

 ~Make other sections like WARNING with \section{WARNING }{....} ~

\seealso{ ~~objects to SEE ALSO as \code{\link{~~fun~~}}, ~~~ }

\examples{
##---- Should be DIRECTLY executable !! ----
##-- ==>  Define data, use random,
##--	     or do  help(data=index)  for the standard data sets.

## The function is currently defined as
function (segs, track = "samples", bandwidth = "w", psfile = "", 
    rate = 20000, scale = 5, height = 7, frange = c(0, rate/2), 
    rms = F, ncolors = 16, factor = 4, zeropt = 35, smoothformants = F, 
    formants = "fm", ...) 
{
    makespec <- paste(emu.options("bindir"), "makespec", sep = emu.options("dirsep"))
    tmpfile <- emu.tempfile("spec")
    template <- attributes(segs)$database
    uttname <- utt(segs[1, ])
    start <- mustart(segs)[1]
    end <- muend(segs)[nrow(segs)]
    command <- paste(makespec, template, start/1000, end/1000, 
        uttname, bandwidth, frange[1], frange[2], factor, zeropt, 
        "> ", tmpfile)
    exitscript <- ""
    exitscript <- paste(exitscript, "unlink(", tmpfile, ");", 
        sep = "")
    cat(command)
    emu.system(command)
    spec <- as.matrix(read.table(tmpfile))
    sgram.width <- dim(spec)[2]
    spec <- spec[, 6:sgram.width - 1]
    tmp <- frange[2] - frange[1]
    frange <- c(frange[1] + (6/sgram.width) * tmp, frange[2] - 
        (1/sgram.width) * tmp)
    if (psfile != "") {
        ps.options(rasters = 600)
        ps.options(image.colors = 0:ncolors/ncolors)
        ps.options(colors = c(0, 0.6, 0.3, 0.9, 0.4, 0.7, 0.1, 
            0.5, 0.8, 0.2))
        setps(psfile, w = scale * sum(mudur(segs))/1000, h = height, 
            type = "char")
    }
    oldmai <- par("mai")
    exitscript <- paste(exitscript, "par(mai=", oldmai, ");", 
        sep = "")
    mai <- oldmai
    mai[1] <- 0
    par(mai = mai)
    if (psfile != "") 
        exitscript <- paste(exitscript, "dev.off();", sep = "")
    on.exit(exitscript)
    frame()
    if (rms) {
        par(fig = c(0, 1, 0.8, 1))
        uttplot(segs, "rms", xlab = "", colour = F, axes = F)
        box()
        mai <- oldmai
        mai[1] <- 0
        mai[3] <- 0
        par(mai = mai)
        fig <- c(0, 1, 0.3, 0.8)
        formdolabels <- F
    }
    else {
        fig <- c(0, 1, 0.3, 1)
        formdolabels <- T
    }
    par(fig = fig)
    if (is.R()) {
        image(z = spec, axes = F, col = gray(1:16/16))
    }
    else {
        image(spec, axes = F)
    }
    par(new = T)
    uttplot(segs, formants, ylim = frange, xlab = "", zeros = T, 
        ylab = "frequency (Hz)", defcolour = 0, colour = F, axes = F, 
        dolabels = formdolabels, smoothing = smoothformants)
    axis(2)
    box()
    par(new = T)
    mai <- oldmai
    mai[3] <- 0
    par(mai = mai)
    par(fig = c(0, 1, 0, 0.3))
    uttplot(segs, track, colour = F, dolabels = F, axes = F, 
        ...)
    axis(1)
    box()
    par(fig = c(0, 1, 0, 1))
  }
}
\keyword{ ~keyword }%-- one or more ...
